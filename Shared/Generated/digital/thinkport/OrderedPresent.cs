// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.11.3
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace digital.thinkport
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("avrogen", "1.11.3")]
	public partial class OrderedPresent : global::Avro.Specific.ISpecificRecord
	{
		public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse(@"{""type"":""record"",""name"":""OrderedPresent"",""namespace"":""digital.thinkport"",""fields"":[{""name"":""brand"",""type"":{""type"":""string"",""avro.java.string"":""String""}},{""name"":""product"",""type"":{""type"":""string"",""avro.java.string"":""String""}},{""name"":""price"",""type"":""double""}]}");
		private string _brand;
		private string _product;
		private double _price;
		public virtual global::Avro.Schema Schema
		{
			get
			{
				return OrderedPresent._SCHEMA;
			}
		}
		public string brand
		{
			get
			{
				return this._brand;
			}
			set
			{
				this._brand = value;
			}
		}
		public string product
		{
			get
			{
				return this._product;
			}
			set
			{
				this._product = value;
			}
		}
		public double price
		{
			get
			{
				return this._price;
			}
			set
			{
				this._price = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.brand;
			case 1: return this.product;
			case 2: return this.price;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.brand = (System.String)fieldValue; break;
			case 1: this.product = (System.String)fieldValue; break;
			case 2: this.price = (System.Double)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
