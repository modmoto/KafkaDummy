// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.11.3
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace digital.thinkport
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("avrogen", "1.11.3")]
	public partial class PresentsPerRecipient : global::Avro.Specific.ISpecificRecord
	{
		public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"PresentsPerRecipient\",\"namespace\":\"digital.thinkport\",\"f" +
				"ields\":[{\"name\":\"recipient\",\"type\":\"string\"},{\"name\":\"presents\",\"type\":{\"type\":\"" +
				"array\",\"items\":\"string\"}},{\"name\":\"cumulated\",\"type\":\"double\"}]}");
		private string _recipient;
		private IList<System.String> _presents;
		private double _cumulated;
		public virtual global::Avro.Schema Schema
		{
			get
			{
				return PresentsPerRecipient._SCHEMA;
			}
		}
		public string recipient
		{
			get
			{
				return this._recipient;
			}
			set
			{
				this._recipient = value;
			}
		}
		public IList<System.String> presents
		{
			get
			{
				return this._presents;
			}
			set
			{
				this._presents = value;
			}
		}
		public double cumulated
		{
			get
			{
				return this._cumulated;
			}
			set
			{
				this._cumulated = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.recipient;
			case 1: return this.presents;
			case 2: return this.cumulated;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.recipient = (System.String)fieldValue; break;
			case 1: this.presents = (IList<System.String>)fieldValue; break;
			case 2: this.cumulated = (System.Double)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
